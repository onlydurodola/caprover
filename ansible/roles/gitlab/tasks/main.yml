- name: Check if GitLab is installed
  stat:
    path: /usr/bin/gitlab-ctl
  register: gitlab_installed

- name: Update system (if not installed)
  apt:
    upgrade: dist
    update_cache: true
  when: not gitlab_installed.stat.exists

- name: Install prerequisites (if needed)
  apt:
    name:
      - curl
      - openssh-server
      - ca-certificates
      - postfix
      - ufw
    state: present
  when: not gitlab_installed.stat.exists

- name: Configure UFW (idempotent)
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - 22
    - 80
    - 443
  when: ansible_os_family == "Debian"
  notify: reload ufw

- name: Enable UFW (if not enabled)
  ufw:
    state: enabled
    policy: allow
  when: ansible_facts.ufw.status == "disabled"

- name: Install GitLab (if not installed)
  shell: |
    curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | bash
    apt-get install -y gitlab-ce
  args:
    creates: /usr/bin/gitlab-ctl
  when: not gitlab_installed.stat.exists

- name: Configure GitLab settings (idempotent)
  blockinfile:
    path: /etc/gitlab/gitlab.rb
    block: |
      external_url 'https://gitlab.{{ domain_name }}'
      nginx['listen_port'] = 8080
      nginx['listen_https'] = false
      nginx['proxy_protocol'] = true
      nginx['real_ip_trusted_addresses'] = ['{{ vpc_cidr }}']
      nginx['real_ip_header'] = 'X-Forwarded-For'
      gitlab_rails['trusted_proxies'] = ['{{ vpc_cidr }}']
      letsencrypt['enable'] = false
    marker: "# {mark} ANSIBLE MANAGED BLOCK - PROXY SETTINGS"
  notify: reconfigure gitlab

- name: Check if root password is set
  shell: |
    gitlab-rails runner "exit User.find(1).encrypted_password.blank? ? 1 : 0"
  register: password_check
  ignore_errors: true
  changed_when: false

- name: Set root password (only if not set)
  command: gitlab-rails runner "user = User.find(1); user.password = '{{ vault_gitlab_root_password }}'; user.password_confirmation = '{{ vault_gitlab_root_password }}'; user.save!"
  no_log: true
  when: password_check.rc != 0
  notify: reconfigure gitlab

- name: Ensure GitLab services are running
  shell: gitlab-ctl status
  register: gitlab_status
  changed_when: "'run:' not in gitlab_status.stdout"
  failed_when: "'down:' in gitlab_status.stdout"

- name: Rotate logs instead of truncating
  find:
    paths: /var/log/gitlab
    patterns: "*.log"
    age: "7d"
  register: old_logs

- name: Remove old logs
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ old_logs.files }}"
  when: old_logs.matched > 0 and ansible_check_mode == false

- name: Create handlers for GitLab
  meta: end_play